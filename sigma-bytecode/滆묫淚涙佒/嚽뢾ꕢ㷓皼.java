public class \u6ec6\ubb2b\uf94d\u6d99\u4f52.\u56bd\ub8be\ua562\u3dd3\u76bc {
    public void \u56bd\ub8be\ua562\u3dd3\u76bc() {
        var_4_A5 : String
        var_5_C7 : \ua3b4\u72f1\u93a2\u3e2a\ua6bd
        var_6_D3 : int
        var_7_D7 : int
        var_9_E4 : String[]
        var_10_E9 : int
        var_11_F2 : int
        var_12_10D : String
        
        if (cmpne:boolean(ldc:int(15), ldc:int(0))) {
        }
        
        Label_0006:
        
        if (cmpne:boolean(ldc:int(14), ldc:int(0))) {
            if (cmpeq:boolean(ldc:int(2), ldc:int(0))) {
                loop {
                    invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#0"))
                    
                    if (cmpne:boolean(ldc:int(2), ldc:int(0))) {
                        loop {
                            Label_0028:
                            invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#1"))
                            
                            if (cmpne:boolean(ldc:int(2), ldc:int(0))) {
                                do {
                                    invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#2"))
                                } while (cmpeq:boolean(ldc:int(2), ldc:int(0)))
                                
                                do {
                                    invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#3"))
                                    
                                    if (cmpeq:boolean(ldc:int(2), ldc:int(0))) {
                                        loopcontinue(Label_0028)
                                    }
                                    
                                    do {
                                        invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#4"))
                                    } while (cmpeq:boolean(ldc:int(2), ldc:int(0)))
                                    
                                    invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#5"))
                                } while (cmpeq:boolean(ldc:int(2), ldc:int(0)))
                                
                                looporswitchbreak(Label_0088)
                            }
                            
                            looporswitchbreak()
                        }
                    }
                }
            }
            
            Label_0088:
            invokespecial:\ua068\u7af6\u3e75\u3bc9\ua562(\ua068\u7af6\u3e75\u3bc9\ua562::<init>, this:\u56bd\ub8be\ua562\u3dd3\u76bc, ldc:String("beta"))
            putfield:\u8d98\ua068\u4492\u9af2\u5f50(\u56bd\ub8be\ua562\u3dd3\u76bc::\uc4d2\u3e2a\u071d\u51fa\uc229, this:\u56bd\ub8be\ua562\u3dd3\u76bc, initobject:\u8d98\ua068\u4492\u9af2\u5f50(\u8d98\ua068\u4492\u9af2\u5f50::<init>, xor:int(ldc:int(5083), ldc:int(4855)), xor:int(ldc:int(-28464), ldc:int(-28164))))
            putfield:ArrayList<String>(\u56bd\ub8be\ua562\u3dd3\u76bc::\uc84e\u16f6\ufe34\u5140\uf9c5, this:\u56bd\ub8be\ua562\u3dd3\u76bc, initobject:ArrayList<String>(ArrayList<E>::<init>))
            invokevirtual:void(\u12cb\u93a2\ubf56\uc229\u8d90::\u93a2\u93a2\u3504\uc84e\ud158, this:\u56bd\ub8be\ua562\u3dd3\u76bc[expected:\u12cb\u93a2\ubf56\uc229\u8d90], and:int[expected:boolean](ldc:int(26952), ldc:int(-32108)))
            var_4_A5 = initobject:String(String::<init>, invokevirtual:byte[](Decoder::decode, invokestatic:Decoder(Base64::getDecoder), ldc:String("")))
            invokevirtual:void(\u12cb\u93a2\ubf56\uc229\u8d90::\u494c\u494c\ub32d\u36d3\u8753, this:\u56bd\ub8be\ua562\u3dd3\u76bc[expected:\u12cb\u93a2\ubf56\uc229\u8d90], var_5_C7 = initobject:\ua3b4\u72f1\u93a2\u3e2a\ua6bd(\ua3b4\u72f1\u93a2\u3e2a\ua6bd::<init>, this:\u56bd\ub8be\ua562\u3dd3\u76bc[expected:\u12cb\u93a2\ubf56\uc229\u8d90], ldc:String("sv"), and:int(ldc:int(27334), ldc:int(-31456)), ldc:int(100), getfield:int(\u56bd\ub8be\ua562\u3dd3\u76bc::\u8350\u1187\u6c56\ub32d\u927d, this:\u56bd\ub8be\ua562\u3dd3\u76bc), sub:int(getfield:int(\u56bd\ub8be\ua562\u3dd3\u76bc::\ub8be\u7873\u36d3\ub102\u8258, this:\u56bd\ub8be\ua562\u3dd3\u76bc), ldc:int(100))))
            var_6_D3 = and:int(ldc:int(-7547), ldc:int(5490))
            var_7_D7 = ldc:int(20)
            var_9_E4 = invokevirtual:String[](String::split, var_4_A5:String, ldc:String("\n"))
            var_10_E9 = arraylength:int(var_9_E4:String[])
            var_11_F2 = and:int(ldc:int(21744), ldc:int(-22005))
            
            while (cmplt:boolean(var_11_F2:int, var_10_E9:int)) {
                var_12_10D = loadelement:String(var_9_E4:String[], var_11_F2:int)
                invokevirtual:void(\ua3b4\u72f1\u93a2\u3e2a\ua6bd::\u494c\u494c\ub32d\u36d3\u8753, var_5_C7:\ua3b4\u72f1\u93a2\u3e2a\ua6bd, initobject:\u7e3f\uc246\u9033\u3504\u6435(\u7e3f\uc246\u9033\u3504\u6435::<init>, var_5_C7:\ua3b4\u72f1\u93a2\u3e2a\ua6bd[expected:\u12cb\u93a2\ubf56\uc229\u8d90], invokevirtual:String(StringBuilder::toString, invokevirtual:StringBuilder(StringBuilder::append, invokevirtual:StringBuilder(StringBuilder::append, initobject:StringBuilder(StringBuilder::<init>), ldc:String("lbl")), var_6_D3:int)), ldc:int(40), add:int(ldc:int(40), mul:int(var_7_D7:int, postincrement:int(1, var_6_D3:int))), and:int(ldc:int(-28962), ldc:int(28961)), and:int(ldc:int(1167), ldc:int(-1424)), getstatic:\u4c04\u6b0d\u61a4\u6435\u71ae(\u4c04\u6b0d\u61a4\u6435\u71ae::\u624e\u0b8e\ud158\ud158\ubf56), var_12_10D:String, ternaryop:\u6fb0\u1187\u12b2\ua068\u5245\u67e9(invokevirtual:boolean(String::startsWith, var_12_10D:String, ldc:String("*")), getstatic:\u6fb0\u1187\u12b2\ua068\u5245\u67e9(\u3a62\uc910\u1187\u718f\u9255::\ub70c\uf9c5\u67d0\ucef1\ucb79), getstatic:\u6fb0\u1187\u12b2\ua068\u5245\u67e9(\u3a62\uc910\u1187\u718f\u9255::\ua3b4\u4d85\u3e75\u6198\u7330))))
                inc:int(var_11_F2, ldc:int(1))
            }
            
            return:void()
        }
        
        goto(Label_0006)
    }
    
    public void \ucfaf\u7e3f\ube23\u4f52\u071d(float p0) {
        if (cmpne:boolean(ldc:int(15), ldc:int(0))) {
        }
        
        Label_0006:
        
        if (cmpne:boolean(ldc:int(14), ldc:int(0))) {
            if (cmpeq:boolean(ldc:int(2), ldc:int(0))) {
                loop {
                    invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#0"))
                    
                    if (cmpne:boolean(ldc:int(2), ldc:int(0))) {
                        loop {
                            Label_0028:
                            invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#1"))
                            
                            if (cmpne:boolean(ldc:int(2), ldc:int(0))) {
                                do {
                                    invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#2"))
                                } while (cmpeq:boolean(ldc:int(2), ldc:int(0)))
                                
                                do {
                                    invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#3"))
                                    
                                    if (cmpeq:boolean(ldc:int(2), ldc:int(0))) {
                                        loopcontinue(Label_0028)
                                    }
                                    
                                    do {
                                        invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#4"))
                                    } while (cmpeq:boolean(ldc:int(2), ldc:int(0)))
                                    
                                    invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#5"))
                                } while (cmpeq:boolean(ldc:int(2), ldc:int(0)))
                                
                                looporswitchbreak(Label_0088)
                            }
                            
                            looporswitchbreak()
                        }
                    }
                }
            }
            
            Label_0088:
            invokestatic:void(\u51fa\u494c\u71f1\u7330\u12cb::\u446c\u8d90\u1187\uff55\ua3b4\u98a4, ldc:float(0.0f), ldc:float(0.0f), i2f:float(getfield:int(\u56bd\ub8be\ua562\u3dd3\u76bc::\u8350\u1187\u6c56\ub32d\u927d, this:\u56bd\ub8be\ua562\u3dd3\u76bc)), i2f:float(getfield:int(\u56bd\ub8be\ua562\u3dd3\u76bc::\ub8be\u7873\u36d3\ub102\u8258, this:\u56bd\ub8be\ua562\u3dd3\u76bc)), invokestatic:int(\u3bd6\u6d99\ub113\u4d85\u71f1::\ub18d\u4975\u5140\u3711\uf995, getfield:int(\u8aa5\u3dd3\ub19c\u600f\u6198::\u59ec\ubf56\u8640\u759a\u0800, getstatic:\u8aa5\u3dd3\ub19c\u600f\u6198(\u8aa5\u3dd3\ub19c\u600f\u6198::\u6c56\u3c25\u7af6\u4492\u97e6)), mul:float(invokevirtual:float(\u8d98\ua068\u4492\u9af2\u5f50::\u34df\ubefe\uc2bd\u8308\u8d90\uc3e3, getfield:\u8d98\ua068\u4492\u9af2\u5f50(\u56bd\ub8be\ua562\u3dd3\u76bc::\uc4d2\u3e2a\u071d\u51fa\uc229, this:\u56bd\ub8be\ua562\u3dd3\u76bc)), ldc:float(0.95f))))
            invokestatic:void(\u51fa\u494c\u71f1\u7330\u12cb::\u8350\u52d3\ub8be\u9033\ub7dc\ub18d, getstatic:\u6fb0\u1187\u12b2\ua068\u5245\u67e9(\u3a62\uc910\u1187\u718f\u9255::\ua6bd\u4c04\u3a62\u47c2\ud158), ldc:float(40.0f), ldc:float(40.0f), ldc:String("Credits and third party licensing information"), getfield:int(\u8aa5\u3dd3\ub19c\u600f\u6198::\u59ec\ubf56\u8640\u759a\u0800, getstatic:\u8aa5\u3dd3\ub19c\u600f\u6198(\u8aa5\u3dd3\ub19c\u600f\u6198::\u6d99\u6fb0\ub102\u8413\u8350)))
            invokespecial:void(\u12cb\u93a2\ubf56\uc229\u8d90::\ucfaf\u7e3f\ube23\u4f52\u071d, this:\u56bd\ub8be\ua562\u3dd3\u76bc[expected:\u12cb\u93a2\ubf56\uc229\u8d90], invokevirtual:float(\u8d98\ua068\u4492\u9af2\u5f50::\u34df\ubefe\uc2bd\u8308\u8d90\uc3e3, getfield:\u8d98\ua068\u4492\u9af2\u5f50(\u56bd\ub8be\ua562\u3dd3\u76bc::\uc4d2\u3e2a\u071d\u51fa\uc229, this:\u56bd\ub8be\ua562\u3dd3\u76bc)))
            return:void()
        }
        
        goto(Label_0006)
    }
    
    public void \ua068\u5140\u9a18\u8d98\ufe34\uc2e8(int p0) {
        if (cmpne:boolean(ldc:int(15), ldc:int(0))) {
        }
        
        Label_0006:
        
        if (cmpne:boolean(ldc:int(14), ldc:int(0))) {
            if (cmpeq:boolean(ldc:int(2), ldc:int(0))) {
                loop {
                    invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#0"))
                    
                    if (cmpne:boolean(ldc:int(2), ldc:int(0))) {
                        loop {
                            Label_0028:
                            invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#1"))
                            
                            if (cmpne:boolean(ldc:int(2), ldc:int(0))) {
                                do {
                                    invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#2"))
                                } while (cmpeq:boolean(ldc:int(2), ldc:int(0)))
                                
                                do {
                                    invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#3"))
                                    
                                    if (cmpeq:boolean(ldc:int(2), ldc:int(0))) {
                                        loopcontinue(Label_0028)
                                    }
                                    
                                    do {
                                        invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#4"))
                                    } while (cmpeq:boolean(ldc:int(2), ldc:int(0)))
                                    
                                    invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#5"))
                                } while (cmpeq:boolean(ldc:int(2), ldc:int(0)))
                                
                                looporswitchbreak(Label_0088)
                            }
                            
                            looporswitchbreak()
                        }
                    }
                }
            }
            
            Label_0088:
            invokespecial:void(\ua068\u7af6\u3e75\u3bc9\ua562::\ua068\u5140\u9a18\u8d98\ufe34\uc2e8, this:\u56bd\ub8be\ua562\u3dd3\u76bc[expected:\ua068\u7af6\u3e75\u3bc9\ua562], p0:int)
            
            if (cmpeq:boolean(p0:int, xor:int(ldc:int(24641), ldc:int(24897)))) {
                invokevirtual:void(\u67e9\u4daf\u760c\ud217\ua6bd\ubff1::\u385b\u647c\u4492\u1187\u0a06\u0c95, invokestatic:\u67e9\u4daf\u760c\ud217\ua6bd\ubff1(\u67e9\u4daf\u760c\ud217\ua6bd\ubff1::\u6d69\u71ae\ucfaf\u516c\ube23\u8350), initobject:\ud7e8\u6d69\u4c2b\u71f1\u71ae[expected:\ua3b4\u965f\u6d99\u4492\ud4fe\u7006](\ud7e8\u6d69\u4c2b\u71f1\u71ae::<init>))
            }
            
            return:void()
        }
        
        goto(Label_0006)
    }
    
    public void \ucb79\u5bc4\u760c\u8413\u156b(\u6ec6\ubb2b\uf94d\u6d99\u4f52.\uae87\u3bc9\u3bc9\u7049\uc246\u3e75 p0, \u7c6b\u7c6b\ubefe\u385b\u3c25.\u4ab3\ub83f\u718f\ucb79\u120d.\u6b5f\u5f50\ubefe\ucfaf\u4f52\ub18d p1) {
        var_3_675 : int
        var_5_7D : int
        var_6_84 : int
        var_7_93 : double
        var_9_B9 : double
        var_3_CB : int
        var_11_DC : int
        var_14_106 : double
        var_16_10A : int
        var_12_102 : double
        var_17_680 : int
        
        if (cmpne:boolean(ldc:int(15), ldc:int(0))) {
        }
        
        Label_0006:
        
        if (cmpeq:boolean(ldc:int(14), ldc:int(0))) {
            goto(Label_0006)
        }
        
        if (cmpeq:boolean(ldc:int(2), ldc:int(0))) {
            loop {
                invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#0"))
                
                if (cmpne:boolean(ldc:int(2), ldc:int(0))) {
                    loop {
                        Label_0028:
                        invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#1"))
                        
                        if (cmpne:boolean(ldc:int(2), ldc:int(0))) {
                            do {
                                invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#2"))
                            } while (cmpeq:boolean(ldc:int(2), ldc:int(0)))
                            
                            do {
                                invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#3"))
                                
                                if (cmpeq:boolean(ldc:int(2), ldc:int(0))) {
                                    loopcontinue(Label_0028)
                                }
                                
                                do {
                                    invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#4"))
                                } while (cmpeq:boolean(ldc:int(2), ldc:int(0)))
                                
                                invokevirtual:void(PrintStream::println, getstatic:PrintStream(System::out), ldc:String("#5"))
                            } while (cmpeq:boolean(ldc:int(2), ldc:int(0)))
                            
                            looporswitchbreak(Label_0088)
                        }
                        
                        looporswitchbreak()
                    }
                }
            }
        }
        
        Label_0088:
        var_3_675 = and:int(ldc:int(-849169165), ldc:int(491173471))
        
        if (cmpeq:boolean(getstatic:double(\u7049\ucfaf\u4c2b\u74b1\u69d9\uf9c5::\u6c56\u8cae\uc31c\u446c\uc9f6\u873d), ldc:double(0.0))) {
            invokestatic:void(\u7049\ucfaf\u4c2b\u74b1\u69d9\uf9c5::\u0800\u2dcc\uc4d2\u8aa5\u4cd9\u51b2, this:\u56bd\ub8be\ua562\u3dd3\u76bc[expected:Object], p0:\uae87\u3bc9\u3bc9\u7049\uc246\u3e75[expected:Object])
            goto(Label_0167)
        }
        
        Label_0106:
        
        if (cmpne:boolean(and:int(var_3_675:int, ldc:int(1)), ldc:int(0))) {
            var_3_675 = and:int(var_3_675:int, ldc:int(-314138815))
            var_5_7D = and:int(ldc:int(-22520), ldc:int(5271))
            var_6_84 = invokestatic:int(\uae87\u3bc9\u3bc9\u7049\uc246\u3e75::\u8389\u3bd6\u3bc9\uc2bd\u8640\u52d3)
            var_7_93 = loadelement:double(getstatic:double[](\u9937\u071d\ub19c\u6c56\ua562\uc87f::\u2dcc\u3776\ub171\u516c\u56bd\uc7fe), and:int(ldc:int(-15593), ldc:int(11496)))
            invokestatic:int(m::a)
            
            loop {
                var_9_B9 = ldc:double(0.0)
                
                if (cmpne:boolean(getstatic:ap(\u7049\ucfaf\u4c2b\u74b1\u69d9\uf9c5::a), getstatic:ap(ap::a))) {
                    var_3_CB = and:int(var_3_675:int, ldc:int(1600320971))
                    var_9_B9 = sub:double(var_7_93:double, mul:double(getstatic:double(\u7049\ucfaf\u4c2b\u74b1\u69d9\uf9c5::\u6c56\u8cae\uc31c\u446c\uc9f6\u873d), ldc:double(0.001)))
                    var_11_DC = var_5_7D:int
                    
                    while (logicaland:boolean(cmplt:boolean(var_11_DC:int, sub:int(var_6_84:int, and:int(ldc:int(793), ldc:int(19619)))), cmplt:boolean(loadelement:double(getstatic:double[](\u9937\u071d\ub19c\u6c56\ua562\uc87f::\u2dcc\u3776\ub171\u516c\u56bd\uc7fe), add:int(var_11_DC:int, xor:int(ldc:int(83), ldc:int(82)))), var_7_93:double))) {
                        inc:int(var_11_DC, ldc:int(1))
                    }
                    
                    var_3_675 = and:int(var_3_CB:int, ldc:int(1878506623))
                    var_14_106 = var_7_93:double
                    var_16_10A = var_11_DC:int
                }
                else {
                    var_11_DC = sub:int(add:int(invokestatic:int(d::a, getstatic:double(\u7049\ucfaf\u4c2b\u74b1\u69d9\uf9c5::\u6c56\u8cae\uc31c\u446c\uc9f6\u873d)), var_5_7D:int), xor:int(ldc:int(-32670), ldc:int(-32669)))
                    var_12_102 = var_14_106 = loadelement(getstatic(\u9937\u071d\ub19c\u6c56\ua562\uc87f::\u2dcc\u3776\ub171\u516c\u56bd\uc7fe), var_5_7D)
                    
                    if (cmplt:boolean(var_16_10A = var_11_DC:int, var_6_84:int)) {
                        var_9_B9 = loadelement:double(getstatic:double[](\u9937\u071d\ub19c\u6c56\ua562\uc87f::\u2dcc\u3776\ub171\u516c\u56bd\uc7fe), var_11_DC:int)
                        var_16_10A = var_11_DC:int
                        var_14_106 = var_12_102:double
                    }
                }
                
                loop {
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(16777216)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(-1586058089))
                        goto(Label_1559)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(32768)), ldc:int(0))) {
                        goto(Label_1412)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(32768)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(1893237812))
                        goto(Label_1269)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(32768)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(1712696496))
                        goto(Label_1145)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(2147483647)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(-1353185467))
                        goto(Label_0986)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(65536)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(182063756))
                        goto(Label_0863)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(134217728)), ldc:int(0))) {
                        goto(Label_0722)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(1024)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(-1959539241))
                        goto(Label_0588)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(2048)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(793951977))
                        
                        if (cmplt:boolean(var_16_10A:int, var_6_84:int)) {
                            if (cmpne:boolean(getstatic:ao(\u7049\ucfaf\u4c2b\u74b1\u69d9\uf9c5::i), getstatic:ao(ao::a))) {
                                goto(Label_0588)
                            }
                            
                            goto(Label_0863)
                        }
                    }
                    
                    Label_0413:
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(2048)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(240141864))
                        goto(Label_1559)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(262144)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(409413293))
                        goto(Label_1412)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(65536)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(195970572))
                        goto(Label_1269)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(32768)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(-254206811))
                        goto(Label_1145)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(2048)), ldc:int(0))) {
                        goto(Label_0986)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(67108864)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(-46998136))
                        goto(Label_0863)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(16384)), ldc:int(0))) {
                        goto(Label_0722)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(16777216)), ldc:int(0))) {
                        if (cmpne:boolean(and:int(var_3_675:int, ldc:int(134217728)), ldc:int(0))) {
                            var_3_675 = and:int(var_3_675:int, ldc:int(-1107894689))
                            var_11_DC = and:int(ldc:int(2631), ldc:int(-2632))
                            goto(Label_1548)
                        }
                        
                        loopcontinue()
                    }
                    
                    Label_0588:
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(262144)), ldc:int(0))) {
                        goto(Label_1559)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(134217728)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(-1695987930))
                        goto(Label_1412)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(4194304)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(-1905937528))
                        goto(Label_1269)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(16777216)), ldc:int(0))) {
                        goto(Label_1145)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(131072)), ldc:int(0))) {
                        goto(Label_0986)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(64)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(1186174398))
                        goto(Label_0863)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(134217728)), ldc:int(0))) {
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(32768)), ldc:int(0))) {
                            var_3_675 = and:int(var_3_675:int, ldc:int(1980548047))
                            goto(Label_0413)
                        }
                        
                        if (cmpne:boolean(and:int(var_3_675:int, ldc:int(33554432)), ldc:int(0))) {
                            var_3_675 = and:int(var_3_675:int, ldc:int(-1636069473))
                            loopcontinue()
                        }
                        
                        var_3_675 = and:int(var_3_675:int, ldc:int(-1351969193))
                        
                        if (cmpeq:boolean(getstatic:ao(\u7049\ucfaf\u4c2b\u74b1\u69d9\uf9c5::i), getstatic:ao(ao::c))) {
                            var_14_106 = var_9_B9:double
                            goto(Label_0863)
                        }
                    }
                    
                    Label_0722:
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(67108864)), ldc:int(0))) {
                        goto(Label_1559)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(262144)), ldc:int(0))) {
                        goto(Label_1412)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(33554432)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(532944868))
                        goto(Label_1269)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(4194304)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(930627561))
                        goto(Label_1145)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(134217728)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(-307699725))
                        goto(Label_0986)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(64)), ldc:int(0))) {
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(134217728)), ldc:int(0))) {
                            var_3_675 = and:int(var_3_675:int, ldc:int(-91734061))
                            goto(Label_0588)
                        }
                        
                        if (cmpne:boolean(and:int(var_3_675:int, ldc:int(33554432)), ldc:int(0))) {
                            goto(Label_0413)
                        }
                        
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(4194304)), ldc:int(0))) {
                            var_3_675 = and:int(var_3_675:int, ldc:int(1755632361))
                            loopcontinue()
                        }
                        
                        var_3_675 = and:int(var_3_675:int, ldc:int(1064017909))
                        var_14_106 = mul:double(ldc:double(0.5), add:double(var_9_B9:double, var_14_106:double))
                    }
                    
                    Label_0863:
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(8388608)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(-448131502))
                        goto(Label_1559)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(262144)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(239329063))
                        goto(Label_1412)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(2048)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(539588442))
                        goto(Label_1269)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(1)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(-1810985697))
                        goto(Label_1145)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(1)), ldc:int(0))) {
                        if (cmpne:boolean(and:int(var_3_675:int, ldc:int(8388608)), ldc:int(0))) {
                            goto(Label_0722)
                        }
                        
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(131072)), ldc:int(0))) {
                            goto(Label_0588)
                        }
                        
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(131072)), ldc:int(0))) {
                            goto(Label_0413)
                        }
                        
                        if (cmpne:boolean(and:int(var_3_675:int, ldc:int(8388608)), ldc:int(0))) {
                            loopcontinue()
                        }
                        
                        var_3_675 = and:int(var_3_675:int, ldc:int(1606918087))
                        
                        if (cmpeq:boolean(getstatic:ap(\u7049\ucfaf\u4c2b\u74b1\u69d9\uf9c5::a), getstatic:ap(ap::b))) {
                            if (cmplt:boolean(loadelement:double(getstatic:double[](\u9937\u071d\ub19c\u6c56\ua562\uc87f::\u2dcc\u3776\ub171\u516c\u56bd\uc7fe), var_5_7D:int), var_7_93:double)) {
                                var_11_DC = and:int(ldc:int(2065), ldc:int(24739))
                                goto(Label_1145)
                            }
                        }
                    }
                    
                    Label_0986:
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(16384)), ldc:int(0))) {
                        goto(Label_1559)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(4)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(-705501031))
                        goto(Label_1412)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(32768)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(1564242144))
                        goto(Label_1269)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(2147483647)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(711732829))
                    }
                    else {
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(131072)), ldc:int(0))) {
                            goto(Label_0863)
                        }
                        
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(134217728)), ldc:int(0))) {
                            goto(Label_0722)
                        }
                        
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(4096)), ldc:int(0))) {
                            goto(Label_0588)
                        }
                        
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(67108864)), ldc:int(0))) {
                            goto(Label_0413)
                        }
                        
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(131072)), ldc:int(0))) {
                            var_3_675 = and:int(var_3_675:int, ldc:int(1306413764))
                            loopcontinue()
                        }
                        
                        var_3_675 = and:int(var_3_675:int, ldc:int(1072166483))
                        var_11_DC = and:int(ldc:int(-5749), ldc:int(5684))
                    }
                    
                    Label_1145:
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(2147483647)), ldc:int(0))) {
                        goto(Label_1559)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(16777216)), ldc:int(0))) {
                        goto(Label_1412)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(32768)), ldc:int(0))) {
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(1024)), ldc:int(0))) {
                            goto(Label_0986)
                        }
                        
                        if (cmpne:boolean(and:int(var_3_675:int, ldc:int(8388608)), ldc:int(0))) {
                            var_3_675 = and:int(var_3_675:int, ldc:int(1254483948))
                            goto(Label_0863)
                        }
                        
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(67108864)), ldc:int(0))) {
                            var_3_675 = and:int(var_3_675:int, ldc:int(-595092180))
                            goto(Label_0722)
                        }
                        
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(1024)), ldc:int(0))) {
                            var_3_675 = and:int(var_3_675:int, ldc:int(108403704))
                            goto(Label_0588)
                        }
                        
                        if (cmpne:boolean(and:int(var_3_675:int, ldc:int(8388608)), ldc:int(0))) {
                            goto(Label_0413)
                        }
                        
                        if (cmpne:boolean(and:int(var_3_675:int, ldc:int(16384)), ldc:int(0))) {
                            var_3_675 = and:int(var_3_675:int, ldc:int(1476206593))
                            loopcontinue()
                        }
                        
                        var_3_675 = and:int(var_3_675:int, ldc:int(-1086079791))
                        
                        if (cmpne:boolean(getstatic:ap(\u7049\ucfaf\u4c2b\u74b1\u69d9\uf9c5::a), getstatic:ap(ap::a))) {
                            if (cmpeq:boolean(var_11_DC:int, ldc:int(0))) {
                                goto(Label_1412)
                            }
                        }
                    }
                    
                    Label_1269:
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(1)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(245562289))
                        goto(Label_1559)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(1)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(649275229))
                    }
                    else {
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(64)), ldc:int(0))) {
                            goto(Label_1145)
                        }
                        
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(131072)), ldc:int(0))) {
                            goto(Label_0986)
                        }
                        
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(134217728)), ldc:int(0))) {
                            goto(Label_0863)
                        }
                        
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(64)), ldc:int(0))) {
                            var_3_675 = and:int(var_3_675:int, ldc:int(1633695626))
                            goto(Label_0722)
                        }
                        
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(67108864)), ldc:int(0))) {
                            var_3_675 = and:int(var_3_675:int, ldc:int(1707342254))
                            goto(Label_0588)
                        }
                        
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(32768)), ldc:int(0))) {
                            goto(Label_0413)
                        }
                        
                        if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(64)), ldc:int(0))) {
                            var_3_675 = and:int(var_3_675:int, ldc:int(-1712286156))
                            loopcontinue()
                        }
                        
                        var_3_675 = and:int(var_3_675:int, ldc:int(1607922757))
                        invokestatic:void(\u7049\ucfaf\u4c2b\u74b1\u69d9\uf9c5::\u0800\u2dcc\uc4d2\u8aa5\u4cd9\u51b2, p0:\uae87\u3bc9\u3bc9\u7049\uc246\u3e75, var_14_106:double, var_5_7D:int, var_16_10A:int)
                        goto(Label_1548)
                    }
                    
                    Label_1412:
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(4096)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(879502095))
                        goto(Label_1559)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(65536)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(-87670361))
                        goto(Label_1269)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(65536)), ldc:int(0))) {
                        goto(Label_1145)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(67108864)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(-605327942))
                        goto(Label_0986)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(2147483647)), ldc:int(0))) {
                        goto(Label_0863)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(4096)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(-1956718594))
                        goto(Label_0722)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(8388608)), ldc:int(0))) {
                        goto(Label_0588)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(1024)), ldc:int(0))) {
                        goto(Label_0413)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(33554432)), ldc:int(0))) {
                        loopcontinue()
                    }
                    
                    var_3_675 = and:int(var_3_675:int, ldc:int(-1927983))
                    invokestatic:void(\u7049\ucfaf\u4c2b\u74b1\u69d9\uf9c5::\u0800\u2dcc\uc4d2\u8aa5\u4cd9\u51b2, invokestatic:boolean(\uae87\u3bc9\u3bc9\u7049\uc246\u3e75::\u0a06\u59ec\u93a2\u9937\ub83f\ub171), var_14_106:double, ldc:double(0.0))
                    Label_1548:
                    
                    if (cmpne:boolean(getstatic:ap(\u7049\ucfaf\u4c2b\u74b1\u69d9\uf9c5::a), getstatic:ap(ap::a))) {
                        var_17_680 = var_5_7D:int
                        
                        if (cmpeq:boolean(var_11_DC:int, ldc:int(0))) {
                            looporswitchbreak()
                        }
                    }
                    
                    Label_1559:
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(2048)), ldc:int(0))) {
                        goto(Label_1412)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(2147483647)), ldc:int(0))) {
                        goto(Label_1269)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(16384)), ldc:int(0))) {
                        goto(Label_1145)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(262144)), ldc:int(0))) {
                        goto(Label_0986)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(67108864)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(-924352971))
                        goto(Label_0863)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(64)), ldc:int(0))) {
                        goto(Label_0722)
                    }
                    
                    if (cmpne:boolean(and:int(var_3_675:int, ldc:int(2048)), ldc:int(0))) {
                        goto(Label_0588)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(131072)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(-1763134956))
                        goto(Label_0413)
                    }
                    
                    if (cmpeq:boolean(and:int(var_3_675:int, ldc:int(65536)), ldc:int(0))) {
                        var_3_675 = and:int(var_3_675:int, ldc:int(-37243437))
                        var_17_680 = add:int(var_16_10A:int, and:int(ldc:int(9475), ldc:int(145)))
                        looporswitchbreak()
                    }
                }
                
                var_3_675 = and:int(var_3_675:int, ldc:int(1576975823))
                
                if (cmple:boolean(var_5_7D = var_17_680:int, sub:int(var_6_84:int, xor:int(ldc:int(780), ldc:int(781))))) {
                    loopcontinue()
                }
                
                looporswitchbreak()
            }
        }
        
        Label_0167:
        
        if (cmpne:boolean(and:int(var_3_675:int, ldc:int(2147483647)), ldc:int(0))) {
            return:void()
        }
        
        goto(Label_0106)
    }
}
